# simple python script to scrape matchup data from dotabuff
# run from time to time

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from bs4 import BeautifulSoup
from names import hero_name_table
import time

visible_to_internal = {
    data["visibleName"].lower(): internal
    for internal, data in hero_name_table.items()
}

def GetHeroCounters(hero_url_name):
    # past 12 months
    url = f"https://www.dotabuff.com/heroes/{hero_url_name}/counters?date=year"
    
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--disable-gpu")
    driver = webdriver.Chrome(options=options)
    driver.get(url)
    
    time.sleep(5)
    soup = BeautifulSoup(driver.page_source, "html.parser")
    driver.quit()
    
    counter_table = soup.find("table", {"class": "sortable"})
    if not counter_table:
        print(f"No counter table found for {hero_url_name}.")
        return {}
    
    counters = {}
    rows = counter_table.find_all("tr")
    
    for row in rows[1:]:
        cols = row.find_all("td")
        if len(cols) >= 3:
            hero = cols[1].get_text(strip=True).lower()
            advantage = cols[2].get_text(strip=True).replace("%", "")
            try:
                advantage = float(advantage)
                internal_name = visible_to_internal.get(hero)
                if internal_name:
                    counters[internal_name] = advantage
            except ValueError:
                continue
    
    return counters

matchup_dict = {}

try:
    # fetch
    for internal_name, data in hero_name_table.items():
        print(f"Fetching counters for {internal_name}...")
        counters = GetHeroCounters(data["urlName"])
        if counters:
            matchup_dict[internal_name] = counters
        else:
            print(f"No counters found for {internal_name}.")

    # generate lua file
    with open("matchups_data.lua", "w", encoding="utf-8") as lua_file:
        lua_file.write("-----\n-- This file is generated by bots/Buff/script/matchups.py\n-----\n\n")
        lua_file.write("local heroList = {\n")
        for hero, counter_dict in matchup_dict.items():
            lua_file.write(f"    ['{hero}'] = {{\n")
            for counterHero, advantage in counter_dict.items():
                lua_file.write(f"        ['{counterHero}'] = {advantage},\n")
            lua_file.write("    },\n")
        lua_file.write("}\n\nreturn heroList\n")

    print("matchups.lua has been generated!")
except Exception as e:
    print(f"Error: {e}")
